<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence
    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
	version="1.0">
	<persistence-unit name="openlab_unit"
		transaction-type="RESOURCE_LOCAL">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<class>com.cloudking.openlab.BaseEntity</class>
		<class>com.cloudking.openlab.entity.UserEntity</class>
		<class>com.cloudking.openlab.entity.PropertyEntity</class>
        <class>com.cloudking.openlab.entity.ApplyOrderEntity</class>
        <class>com.cloudking.openlab.entity.IndustryTestCatEntity</class>
        <class>com.cloudking.openlab.entity.AnswerEntity</class>
       <class>com.cloudking.openlab.entity.CommonTechPlatformCatEntity</class>
       <class>com.cloudking.openlab.entity.CommonTechPlatformEntity</class>
       <class>com.cloudking.openlab.entity.CompanyEntity</class>
       <class>com.cloudking.openlab.entity.DownloadFileCatEntity</class>
       <class>com.cloudking.openlab.entity.DownloadFileEntity</class>
       <class>com.cloudking.openlab.entity.EquipmentCatEntity</class>
       <class>com.cloudking.openlab.entity.EquipmentEntity</class>
       <class>com.cloudking.openlab.entity.ExpertQuestionAnswerEntity</class>
       <class>com.cloudking.openlab.entity.ExpertQuestionEntity</class>
       <class>com.cloudking.openlab.entity.MenuEntity</class>
       <class>com.cloudking.openlab.entity.NewsCatEntity</class>
       <class>com.cloudking.openlab.entity.NewsEntity</class>
       <class>com.cloudking.openlab.entity.PointLabCatEntity</class>
       <class>com.cloudking.openlab.entity.PointLabEntity</class>
       <class>com.cloudking.openlab.entity.PolicyCatEntity</class>
       <class>com.cloudking.openlab.entity.PolicyEntity</class>
       <class>com.cloudking.openlab.entity.RegQuestionEntity</class>
       <class>com.cloudking.openlab.entity.ResearchAchieveEntity</class>
       <class>com.cloudking.openlab.entity.ResearchLevelEntity</class>
       <class>com.cloudking.openlab.entity.RightsEntity</class>
       <class>com.cloudking.openlab.entity.RoleEntity</class>
       <class>com.cloudking.openlab.entity.SuccessCaseCatEntity</class>
       <class>com.cloudking.openlab.entity.SuccessCaseEntity</class>
       <class>com.cloudking.openlab.entity.TechTransferCatEntity</class>
       <class>com.cloudking.openlab.entity.TechTransferEntity</class>
		<class>com.cloudking.openlab.entity.TimequantumEntity</class>
        <class>com.cloudking.openlab.entity.IndustryTestTimequantumEntity</class>
        <class>com.cloudking.openlab.entity.TestScheduleEntity</class>
        <class> com.cloudking.openlab.entity.DeptEntity</class>
       
		<!-- 属性配置 -->
		<properties>
			<!-- ==============Hibernate 连接设置================= -->
			<!-- 方言 -->
			<property name="hibernate.dialect"
				value="org.hibernate.dialect.MySQL5Dialect" />
			<!-- org.hibernate.dialect.SQLServerDialect -->
			<!-- org.hibernate.dialect.MySQLDialect -->
			<!-- org.hibernate.dialect.Oracle10gDialect -->

			<!-- 驱动类 -->
			<property name="hibernate.connection.driver_class"
				value="com.mysql.jdbc.Driver" />
			<!-- net.sourceforge.jtds.jdbc.Driver -->
			<!-- oracle.jdbc.driver.OracleDriver -->
			<!-- com.mysql.jdbc.Driver -->

			<!-- URL地址 -->
			<property name="hibernate.connection.url"
				value="jdbc:mysql://127.0.0.1:3306/openlab" />
			<!-- jdbc:jtds:sqlserver://localhost:1433/openlab; -->
			<!--  oracle  jdbc:oracle:thin:@localhost:1521:openlab -->
			<!--   mysql jdbc:mysql://10.6.255.69:3306/openlab  -->

			<!-- 用户名 -->
			<property name="hibernate.connection.username" value="root" />

			<!-- 密码 -->
			<property name="hibernate.connection.password"
				value="cloud" />

			<!-- 连接的字符编码 -->
			<property name="hibernate.connection.charSet" value="UTF-8" />
			<property name="hibernate.connection.characterEncoding"
				value="UTF-8" />


			<!-- ==============Hibernate 附加设置================= -->
			<!-- create 删除以前的，从新建. create-drop 根据model类生成表,但是sessionFactory一关闭,表就自动删除 
				. update 最常用的属性，也根据model类生成表,即使表结构改变了,表中的行仍然存在,不会删除以前的行 validate : 只会和数据库中的表进行比较,不会创建新表,但是会插入新值 -->
			<property name="hibernate.hbm2ddl.auto" value="update" />

			<!-- 在控制台打印SQL语句 -->
			<property name="hibernate.show_sql" value="true" />

			<!-- 格式化 SQL语句-->
			<property name="hibernate.format_sql" value="false" />

			<!-- Hiberante将为SQL产生注释，这样更利于调试-->
			<property name="hibernate.use_sql_comments" value="true" />


			<!-- ==============Hibernate C3P0设置================= -->
			<!-- c3p0连接提供器 -->
			<property name="hibernate.connection.provider_class"
				value="org.hibernate.connection.C3P0ConnectionProvider" />
				
			<!-- 最小连接数 -->
			<property name="c3p0.min_size" value="5" />
			
			<!-- 最大连接数 -->
			<property name="c3p0.max_size" value="30" />
			
			<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
			<property name="c3p0.maxIdleTime" value="60" />
			
			<!-- 获得连接的超时时间,如果超过这个时间,会抛出异常，单位毫秒 -->
			<property name="c3p0.timeout" value="1800" />
			
			<!-- 最大的PreparedStatement的数量 -->
			<property name="c3p0.max_statements" value="50" />
			
			<!-- 每隔120秒检查连接池里的空闲连接 ，单位是秒-->
			<property name="c3p0.idle_test_period" value="120" />
			
			<!-- 当连接池里面的连接用完的时候，C3P0一下获取的新的连接数 -->
			<property name="c3p0.acquire_increment" value="1" />
			<!-- 是否每次都验证连接是否可用 -->
			<property name="c3p0.validate" value="false" />
		</properties>



	</persistence-unit>
</persistence>
